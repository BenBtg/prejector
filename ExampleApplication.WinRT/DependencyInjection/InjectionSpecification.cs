//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by PreJector.
// </auto-generated>
//------------------------------------------------------------------------------
using ExampleApplication.WinRT.Models;
using ExampleApplication.WinRT.Models.Application;
using ExampleApplication.WinRT.Models.Share;
using ExampleApplication.WinRT.ViewModels;
using System;
using System.Diagnostics;
using System.Linq;
using System.Reflection;
namespace ExampleApplication.WinRT.DependencyInjection {
[CoverageExclude]
internal static class Kernel_ApplicationState {
#if DEBUG
static Kernel_ApplicationState() { Debug.WriteLine("Kernel TypeLoad: Kernel_ApplicationState"); }
#endif
private static ApplicationState _ApplicationState;
internal static IApplicationState Get() {
if(_ApplicationState != null) return _ApplicationState;
_ApplicationState = new ApplicationStateProvider().Create();
return _ApplicationState;
}
internal static void Clear() { _ApplicationState = null; }
internal static void Rebind(ApplicationState value) { _ApplicationState = value; }
}
[CoverageExclude]
internal static class Kernel_DataService {
#if DEBUG
static Kernel_DataService() { Debug.WriteLine("Kernel TypeLoad: Kernel_DataService"); }
#endif
private static IDataService _DataService;
internal static IDataService Get() {
if(_DataService != null) return _DataService;
var x = new DataService(
);
_DataService = x;
return _DataService;
}
internal static void Clear() { _DataService = null; }
internal static void Rebind(IDataService value) { _DataService = value; }
}
[CoverageExclude]
internal static class Kernel_Sharing {
#if DEBUG
static Kernel_Sharing() { Debug.WriteLine("Kernel TypeLoad: Kernel_Sharing"); }
#endif
private static ISharing _Sharing;
internal static ISharing Get() {
if(_Sharing != null) return _Sharing;
var x = new SharingModel(
);
_Sharing = x;
x.ApplicationState = Kernel_ApplicationState.Get();
return _Sharing;
}
internal static void Clear() { _Sharing = null; }
internal static void Rebind(ISharing value) { _Sharing = value; }
}
[CoverageExclude]
internal static class Kernel_MainViewModel {
#if DEBUG
static Kernel_MainViewModel() { Debug.WriteLine("Kernel TypeLoad: Kernel_MainViewModel"); }
#endif
private static MainViewModel _MainViewModel;
internal static MainViewModel Get() {
if(_MainViewModel != null) return _MainViewModel;
var x = new MainViewModel(
);
_MainViewModel = x;
x.DataService = Kernel_DataService.Get();
x.Sharing = Kernel_Sharing.Get();
return _MainViewModel;
}
internal static void Clear() { _MainViewModel = null; }
internal static void Rebind(MainViewModel value) { _MainViewModel = value; }
}
[CoverageExclude]
internal static class KernelCleardown {
internal static void Clear() {
Kernel_ApplicationState.Clear();
Kernel_DataService.Clear();
Kernel_Sharing.Clear();
Kernel_MainViewModel.Clear();
}
}
}
